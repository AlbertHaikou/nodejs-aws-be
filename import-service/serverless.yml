service: import-service

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  environment:
    CATALOG_SQS_URL: '${cf:product-service-dev.SQSQueueUrl}'
  iamRoleStatements:
    - Effect: 'Allow'
      Action: 's3:ListBucket'
      Resource:
        - 'arn:aws:s3:::aws-nodejs-app-uploaded'
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource:
        - 'arn:aws:s3:::aws-nodejs-app-uploaded/*'
    - Effect: 'Allow'
      Action: 'sqs:*'
      Resource:
        - '${cf:product-service-dev.SQSQueueArn}'

resources:
  Resources:
    GatewayResponseDenied:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          'gatewayresponse.header.Access-Control-Allow-Origin': "'*'"
          'gatewayresponse.header.Access-Control-Allow-Credentials': "'true'"
        ResponseType: 'ACCESS_DENIED'
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseUnauthorized:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          'gatewayresponse.header.Access-Control-Allow-Origin': "'*'"
          'gatewayresponse.header.Access-Control-Allow-Credentials': "'true'"
        ResponseType: 'UNAUTHORIZED'
        RestApiId:
          Ref: 'ApiGatewayRestApi'

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors:
            origins: '*'
            headers:
              - 'Authorization'
          authorizer:
            type: 'token'
            name: 'tokenBasicAuthorizer'
            arn: 'arn:aws:lambda:eu-west-1:654557347129:function:authorization-service-dev-basicAuthorizer'
            resultTtlInSeconds: 0
            identitySource: 'method.request.header.Authorization'
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: aws-nodejs-app-uploaded
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true